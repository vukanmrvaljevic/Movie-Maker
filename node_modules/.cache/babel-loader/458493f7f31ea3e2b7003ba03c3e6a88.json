{"ast":null,"code":"var _jsxFileName = \"/Users/vukanmrvaljevic/Desktop/General-Assembly/unit_2/week_3/movie-maker/src/Actors.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PostActors from \"./PostActors\"; // import CreateActors from \"./CreateActors\"\n\nfunction Actors() {\n  const [movieInfo, updateMovieInfo] = useState([]);\n  const [fetchMovieInfo, updateFetchMovieInfo] = useState(false); //   const [name, updateName] = useState(\"\")\n  //   const [movie, updateMovie] = useState(\"\")\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const posts = await axios.get(\"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201?view=Grid%20view\", {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`\n        }\n      });\n      updateMovieInfo(posts.data.records);\n    };\n\n    apiCall();\n  }, [fetchMovieInfo]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await axios.post(\"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201\", {\n      fields: {\n        name: name,\n        movie: movie\n      }\n    }, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    updateFetchMovieInfo(!fetchMovieInfo);\n    updateName(\"\");\n    updateMovie(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, movieInfo.map(post => /*#__PURE__*/React.createElement(PostActors, {\n    post: post,\n    key: post.id //   fetchBlogPosts={fetchBlogPosts}\n    //   updateFetchBlogPosts={updateFetchBlogPosts}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Actors;","map":{"version":3,"sources":["/Users/vukanmrvaljevic/Desktop/General-Assembly/unit_2/week_3/movie-maker/src/Actors.js"],"names":["React","useEffect","useState","axios","PostActors","Actors","movieInfo","updateMovieInfo","fetchMovieInfo","updateFetchMovieInfo","apiCall","posts","get","headers","Authorization","process","env","REACT_APP_AIRTABLE_KEY","data","records","handleSubmit","e","preventDefault","post","fields","name","movie","updateName","updateMovie","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACM,cAAD,EAAiBC,oBAAjB,IAAyCP,QAAQ,CAAC,KAAD,CAAvD,CAFgB,CAGhB;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAC1B,YAAMC,KAAK,GAAG,MAAMR,KAAK,CAACS,GAAN,CAClB,0EADkB,EAElB;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AADrD;AADX,OAFkB,CAApB;AAQAV,MAAAA,eAAe,CAACI,KAAK,CAACO,IAAN,CAAWC,OAAZ,CAAf;AACD,KAVD;;AAWAT,IAAAA,OAAO;AACR,GAbQ,EAaN,CAACF,cAAD,CAbM,CAAT;;AAeA,QAAMY,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMJ,IAAI,GAAG,MAAMf,KAAK,CAACoB,IAAN,CACjB,yDADiB,EAEjB;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEA,IADA;AAENC,QAAAA,KAAK,EAAEA;AAFD;AADV,KAFiB,EAQjB;AACEb,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,EADrD;AAEP,wBAAgB;AAFT;AADX,KARiB,CAAnB;AAeAR,IAAAA,oBAAoB,CAAC,CAACD,cAAF,CAApB;AACAmB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GApBD;;AAsBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBGtB,SAAS,CAACuB,GAAV,CAAeN,IAAD,iBACb,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACO,EAFZ,CAGE;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAtBH,CADF;AAiCD;;AAED,eAAezB,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n\nimport PostActors from \"./PostActors\"\n// import CreateActors from \"./CreateActors\"\n\nfunction Actors() {\n  const [movieInfo, updateMovieInfo] = useState([])\n  const [fetchMovieInfo, updateFetchMovieInfo] = useState(false)\n  //   const [name, updateName] = useState(\"\")\n  //   const [movie, updateMovie] = useState(\"\")\n  useEffect(() => {\n    const apiCall = async () => {\n      const posts = await axios.get(\n        \"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201?view=Grid%20view\",\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          },\n        }\n      )\n      updateMovieInfo(posts.data.records)\n    }\n    apiCall()\n  }, [fetchMovieInfo])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const data = await axios.post(\n      \"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201\",\n      {\n        fields: {\n          name: name,\n          movie: movie,\n        },\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    updateFetchMovieInfo(!fetchMovieInfo)\n    updateName(\"\")\n    updateMovie(\"\")\n  }\n\n  return (\n    <main>\n      {/* <CreateActors\n        updateFetchBlogPosts={updateFetchBlogPosts}\n        fetchBlogPosts={fetchBlogPosts}\n      /> */}\n      {/* <form onSubmit={handleSubmit}>\n        <label htmlFor=\"actor\">Actor</label>\n        <input\n          name=\"text\"\n          id=\"actor\"\n          onChange={(e) => updateName(e.target.value)}\n          value={name}\n        />\n        <label htmlFor=\"movie\">Movie</label>\n        <input\n          name=\"text\"\n          id=\"movie\"\n          onChange={(e) => updateMovie(e.target.value)}\n          value={movie}\n        />\n        <input type=\"submit\" value=\"Submit Actors-List\" />\n      </form> */}\n      {movieInfo.map((post) => (\n        <PostActors\n          post={post}\n          key={post.id}\n          //   fetchBlogPosts={fetchBlogPosts}\n          //   updateFetchBlogPosts={updateFetchBlogPosts}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default Actors\n"]},"metadata":{},"sourceType":"module"}