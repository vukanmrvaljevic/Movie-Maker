{"ast":null,"code":"var _jsxFileName = \"/Users/vukanmrvaljevic/Desktop/General-Assembly/unit_2/week_3/movie-maker/src/Actors.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PostActors from \"./PostActors\"; // import CreateActors from \"./CreateActors\"\n\nfunction Actors() {\n  const [movieInfo, updateMovieInfo] = useState([]);\n  const [fetchMovieInfo, updateFetchMovieInfo] = useState(false);\n  const [name, updateName] = useState(\"\");\n  const [movie, updateMovie] = useState(\"\");\n  useEffect(() => {\n    const apiCall = async () => {\n      const posts = await axios.get(\"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201?view=Grid%20view\", {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`\n        }\n      });\n      updateMovieInfo(posts.data.records);\n    };\n\n    apiCall();\n  }, [fetchMovieInfo]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await axios.post(\"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201\", {\n      fields: {\n        name: name,\n        movie: movie\n      }\n    }, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    updateFetchMovieInfo(!fetchMovieInfo);\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"actor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Actor\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"text\",\n    id: \"actor\",\n    onChange: e => updateName(e.target.value),\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"movie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Movie\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"text\",\n    id: \"movie\",\n    onChange: e => updateMovie(e.target.value),\n    value: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit Actors-List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), movieInfo.map(post => /*#__PURE__*/React.createElement(PostActors, {\n    post: post,\n    key: post.id //   fetchBlogPosts={fetchBlogPosts}\n    //   updateFetchBlogPosts={updateFetchBlogPosts}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Actors;","map":{"version":3,"sources":["/Users/vukanmrvaljevic/Desktop/General-Assembly/unit_2/week_3/movie-maker/src/Actors.js"],"names":["React","useEffect","useState","axios","PostActors","Actors","movieInfo","updateMovieInfo","fetchMovieInfo","updateFetchMovieInfo","name","updateName","movie","updateMovie","apiCall","posts","get","headers","Authorization","process","env","REACT_APP_AIRTABLE_KEY","data","records","handleSubmit","e","preventDefault","post","fields","target","value","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n\nimport PostActors from \"./PostActors\"\n// import CreateActors from \"./CreateActors\"\n\nfunction Actors() {\n  const [movieInfo, updateMovieInfo] = useState([])\n  const [fetchMovieInfo, updateFetchMovieInfo] = useState(false)\n  const [name, updateName] = useState(\"\")\n  const [movie, updateMovie] = useState(\"\")\n  useEffect(() => {\n    const apiCall = async () => {\n      const posts = await axios.get(\n        \"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201?view=Grid%20view\",\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          },\n        }\n      )\n      updateMovieInfo(posts.data.records)\n    }\n    apiCall()\n  }, [fetchMovieInfo])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const data = await axios.post(\n      \"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201\",\n      {\n        fields: {\n          name: name,\n          movie: movie,\n        },\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    updateFetchMovieInfo(!fetchMovieInfo)\n  }\n\n  return (\n    <main>\n      {/* <CreateActors\n        updateFetchBlogPosts={updateFetchBlogPosts}\n        fetchBlogPosts={fetchBlogPosts}\n      /> */}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"actor\">Actor</label>\n        <input\n          name=\"text\"\n          id=\"actor\"\n          onChange={(e) => updateName(e.target.value)}\n          value={name}\n        />\n        <label htmlFor=\"movie\">Movie</label>\n        <input\n          name=\"text\"\n          id=\"movie\"\n          onChange={(e) => updateMovie(e.target.value)}\n          value={movie}\n        />\n        <input type=\"submit\" value=\"Submit Actors-List\" />\n      </form>\n      {movieInfo.map((post) => (\n        <PostActors\n          post={post}\n          key={post.id}\n          //   fetchBlogPosts={fetchBlogPosts}\n          //   updateFetchBlogPosts={updateFetchBlogPosts}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default Actors\n"]},"metadata":{},"sourceType":"module"}