{"ast":null,"code":"var _jsxFileName = \"/Users/vukanmrvaljevic/Desktop/General-Assembly/unit_2/week_3/movie-maker/src/Actors.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport UpdateActors from \"./UpdateActors\";\nimport CreateActors from \"./CreateActors\";\n\nfunction Actors() {\n  const [blogPosts, updateBlogPosts] = useState([]);\n  const [fetchBlogPosts, updateFetchBlogPosts] = useState(false);\n  useEffect(() => {\n    const apiCall = async () => {\n      const posts = await axios.get(\"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201?maxRecords=3&view=Grid%20view\", {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`\n        }\n      });\n      updateBlogPosts(posts.data.records);\n    };\n\n    apiCall();\n  }, [fetchBlogPosts]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"My Blog\"), /*#__PURE__*/React.createElement(CreateActors, {\n    updateFetchBlogPosts: updateFetchBlogPosts,\n    fetchBlogPosts: fetchBlogPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), blogPosts.map(post => /*#__PURE__*/React.createElement(UpdateActors, {\n    post: post,\n    key: post.id,\n    fetchBlogPosts: fetchBlogPosts,\n    updateFetchBlogPosts: updateFetchBlogPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Actors;","map":{"version":3,"sources":["/Users/vukanmrvaljevic/Desktop/General-Assembly/unit_2/week_3/movie-maker/src/Actors.js"],"names":["React","useEffect","useState","axios","UpdateActors","CreateActors","Actors","blogPosts","updateBlogPosts","fetchBlogPosts","updateFetchBlogPosts","apiCall","posts","get","headers","Authorization","process","env","REACT_APP_AIRTABLE_KEY","data","records","map","post","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACO,cAAD,EAAiBC,oBAAjB,IAAyCR,QAAQ,CAAC,KAAD,CAAvD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAG,YAAY;AAC1B,YAAMC,KAAK,GAAG,MAAMT,KAAK,CAACU,GAAN,CAClB,uFADkB,EAElB;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AADrD;AADX,OAFkB,CAApB;AAQAV,MAAAA,eAAe,CAACI,KAAK,CAACO,IAAN,CAAWC,OAAZ,CAAf;AACD,KAVD;;AAWAT,IAAAA,OAAO;AACR,GAbQ,EAaN,CAACF,cAAD,CAbM,CAAT;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,YAAD;AACE,IAAA,oBAAoB,EAAEC,oBADxB;AAEE,IAAA,cAAc,EAAED,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAMGF,SAAS,CAACc,GAAV,CAAeC,IAAD,iBACb,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,EAFZ;AAGE,IAAA,cAAc,EAAEd,cAHlB;AAIE,IAAA,oBAAoB,EAAEC,oBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANH,CADF;AAiBD;;AAED,eAAeJ,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n\nimport UpdateActors from \"./UpdateActors\"\nimport CreateActors from \"./CreateActors\"\n\nfunction Actors() {\n  const [blogPosts, updateBlogPosts] = useState([])\n  const [fetchBlogPosts, updateFetchBlogPosts] = useState(false)\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const posts = await axios.get(\n        \"https://api.airtable.com/v0/app7JCVhsKVPmHS6X/Table%201?maxRecords=3&view=Grid%20view\",\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          },\n        }\n      )\n      updateBlogPosts(posts.data.records)\n    }\n    apiCall()\n  }, [fetchBlogPosts])\n\n  return (\n    <main>\n      <h1>My Blog</h1>\n      <CreateActors\n        updateFetchBlogPosts={updateFetchBlogPosts}\n        fetchBlogPosts={fetchBlogPosts}\n      />\n      {blogPosts.map((post) => (\n        <UpdateActors\n          post={post}\n          key={post.id}\n          fetchBlogPosts={fetchBlogPosts}\n          updateFetchBlogPosts={updateFetchBlogPosts}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default Actors\n"]},"metadata":{},"sourceType":"module"}